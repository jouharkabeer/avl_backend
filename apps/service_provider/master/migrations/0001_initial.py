# Generated by Django 5.0.1 on 2025-08-28 08:52

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChangeLog',
            fields=[
                ('log_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.UUIDField()),
                ('action', models.CharField(choices=[('edit', 'Edit'), ('delete', 'Delete')], max_length=10)),
                ('is_delete', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(auto_now_add=True)),
                ('changes', models.JSONField()),
                ('edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceBrand',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_brand_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_brand_name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Device brand name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceDataType',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_dataType_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_type_code', models.CharField(max_length=50)),
                ('data_type_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('device_value_meaning', models.JSONField()),
                ('supported_devices', models.JSONField()),
                ('showdatatype', models.BooleanField(default=True)),
                ('iscalculateddatatype', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceFeature',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('feature_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feature_name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Feature name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('is_default', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceSensor',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_sensor_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_sensor_name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Device sensor name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_type_name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Device Type name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Device name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('device_brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.devicebrand')),
                ('features', models.ManyToManyField(related_name='devices', to='master.devicefeature')),
                ('sensors', models.ManyToManyField(related_name='devices', to='master.devicesensor')),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master.devicetype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketCategory',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ticket_category_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Ticket category name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketSubCategory',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ticket_subcategory_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Ticket Subcategory name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='master.ticketcategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehiclePlateType',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_plate_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Vehicle plate type name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_type_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vehicle_type_name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Vehicle type name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('status', models.BooleanField(default=True)),
                ('is_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unit_name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Unit name must be alphanumeric and contain no special characters.', regex='^[a-zA-Z0-9 ]+$')])),
                ('description', models.TextField()),
                ('symbol', models.CharField(blank=True, max_length=10, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
                'ordering': ['unit_name'],
                'indexes': [models.Index(fields=['unit_name'], name='master_unit_unit_na_a13f44_idx')],
            },
        ),
    ]
